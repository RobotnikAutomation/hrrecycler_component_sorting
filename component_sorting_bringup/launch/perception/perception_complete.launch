<?xml version="1.0"?>
<launch>
  <arg name="robot_id" default="$(optenv ROBOT_ID robot)"/>
  <arg name="prefix" value="$(arg robot_id)_"/>



    <arg name="robot_base_frame" default="$(arg prefix)base_link"/>
    <arg name="robot_sensor_frame" default="$(arg prefix)front_laser_base_link" />
    <arg name="fixed_frame" default="$(arg prefix)odom" />
    <arg name="object_frame" default="cart_contact"/>
    <arg name="scan_topic_name" default="front_laser/cloud" />
  
    <node pkg="image_filter" type="image_filter" name="image_filter">
        <!-- This filter is for making whitey areas more white, so alvar detector can work in different lightning conditions -->
        <remap from="image_in" to="front_rgbd_camera/rgb/image_raw" />
        <remap from="image_out" to="front_rgbd_camera/rgb/image" />
        <param name="threshold" value="135" />
    </node>

    <node name="camera_locator" pkg="robotnik_locator" type="alvar_locator_node" output="screen">
        <rosparam file="$(find component_sorting_bringup)/config/perception/camera_locator.yaml" command="load" />
    </node>   
    



    <node pkg="image_filter" type="image_filter" name="arm_image_filter">
        <!-- This filter is for making whitey areas more white, so alvar detector can work in different lightning conditions -->
        <remap from="image_in" to="wrist_rgbd/color/image_raw" />
        <remap from="image_out" to="wrist_rgbd/color/image" />
        <param name="threshold" value="135" />
    </node>

    <node name="arm_camera_locator" pkg="robotnik_locator" type="alvar_locator_node" output="screen">
        <rosparam file="$(find component_sorting_bringup)/config/perception/arm_camera_locator.yaml" command="load" />
    </node>   
    
    <node name="marker_pose_filter" pkg="robotnik_pose_filter" type="tf_multi_pose_filter_node" respawn="false" output="screen" clear_params="true">
      <param name="filter_position_sensitivity"       type="double" value="0.1" />
      <param name="filter_orientation_sensitivity"    type="double" value="0.1" />
      <param name="source_frame" type="string" value="$(arg prefix)odom" />
      <param name="target_frame" type="string" value="robot_noisy_(.*)" />
      <param name="filtered_source_frame" type="string" value="$(arg prefix)odom" />
      <param name="filtered_target_frame" type="string" value="" />
      <!-- as now we are getting the position using the laser, we don't need to rotate the transform -->
      <rosparam param="apply_transform">[0.0, 0.0, 0.0, 0.0, 1.5707, 1.5707]</rosparam> 
      <param name="two_d_mode" type="bool" value="true" />
    </node>
    
    

</launch>
